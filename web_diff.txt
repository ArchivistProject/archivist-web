diff --git a/config.js b/config.js
index 9418bf3..a3c0b7a 100644
--- a/config.js
+++ b/config.js
@@ -1,3 +1,3 @@
 export default {
-    backend: process.env.NODE_ENV === 'development' ? 'http://localhost:3000' : window.location.origin,
+    backend: process.env.NODE_ENV === 'development' ? 'https://localhost:3000' : window.location.origin,
 };
diff --git a/src/api/settings-api.js b/src/api/settings-api.js
index 290971c..fc9f85a 100644
--- a/src/api/settings-api.js
+++ b/src/api/settings-api.js
@@ -35,11 +35,11 @@ export function deleteItem(groupID) {
 }
 
 // -------------------------Api token----------------------------------
-export function fetchAPIToken() {
-    return ajax('GET', 'theURL'); // TODO
+export function fetchAPIToken(refresh) {
+    var url = 'system/settings/api_key' + (refresh ? '?refresh=true' : '');
+    return ajax('GET', url);
 }
 
-
 // --------------------------Statistic--------------------
 
 export function fetchFileStorage() {
diff --git a/src/components/description-box/description-box.js b/src/components/description-box/description-box.js
index 27b5b48..e4f369a 100644
--- a/src/components/description-box/description-box.js
+++ b/src/components/description-box/description-box.js
@@ -17,7 +17,7 @@ export default class DescriptionBox extends Component {
     getMarkdownText() {
         const { activeItem } = this.props;
         const desc = activeItem.description === undefined ? '' : activeItem.description;
-        const rawMarkup = marked(desc, { gfm: true, breaks: true });
+        const rawMarkup = marked(desc, { gfm: true, sanatize: true, breaks: true });
         console.log('NORM DESC:', activeItem.description);
         return { __html: rawMarkup };
     }
diff --git a/src/state/settings/settings-action-creators.js b/src/state/settings/settings-action-creators.js
index 2515a9a..7faa1ce 100644
--- a/src/state/settings/settings-action-creators.js
+++ b/src/state/settings/settings-action-creators.js
@@ -150,9 +150,9 @@ export function openDialog(val) {
 }
 
 // ----------------------API Token---------------------------
-export function refreshAPI() {
+export function fetchAPIToken(refresh) {
     return (dispatch) => {
-        settingsApi.fetchAPIToken()
+        settingsApi.fetchAPIToken(refresh)
             .then(response => dispatch({
                 type: settingsActionTypes.FETCH_API_SUCCEEDED,
                 data: response,
diff --git a/src/views/settings/components/apiToken.js b/src/views/settings/components/apiToken.js
index 544cb39..78718ff 100644
--- a/src/views/settings/components/apiToken.js
+++ b/src/views/settings/components/apiToken.js
@@ -5,25 +5,29 @@ import { Button, FormControl,
 export default class APIToken extends Component {
 
     static propTypes = {
-        token: PropTypes.string,
-        refreshAPI: PropTypes.func.isRequired,
+        apiToken: PropTypes.string,
+        fetchAPIToken: PropTypes.func.isRequired,
     };
 
     refresh = () => {
-        const { refreshAPI } = this.props;
-        refreshAPI();
+        const { fetchAPIToken } = this.props;
+        fetchAPIToken(true);
+    };
+
+    componentDidMount() {
+        const { fetchAPIToken } = this.props;
+        fetchAPIToken(false);
     };
 
     render() {
-        const { token } = this.props;
+        const { apiToken } = this.props;
         return (
             <div>
                 <FormControl
                     componentClass='textarea'
-                    placeholder='no API available'
                     readOnly
+                    value={apiToken}
                 >
-                    {token}
                 </FormControl>
                 <Button bsStyle='info' onClick={this.refresh}>Refresh</Button>
             </div>
diff --git a/src/views/settings/components/settings.js b/src/views/settings/components/settings.js
index 1be3426..e925c8f 100644
--- a/src/views/settings/components/settings.js
+++ b/src/views/settings/components/settings.js
@@ -19,7 +19,7 @@ export default class Settings extends Component {
         closeDialog: PropTypes.func.isRequired,
 
         apiToken: PropTypes.string,
-        refreshAPI: PropTypes.func.isRequired,
+        fetchAPIToken: PropTypes.func.isRequired,
 
         storage: PropTypes.number,
         fileCount: PropTypes.number,
@@ -85,13 +85,13 @@ export default class Settings extends Component {
     }
 
     apiToken() {
-        const { apiToken, refreshAPI } = this.props;
+        const { apiToken, fetchAPIToken } = this.props;
         return (
             <div>
                 <Panel header='API Token' bsStyle='info'>
                     <RefreshAPI
                         apiToken={apiToken}
-                        refreshAPI={refreshAPI}
+                        fetchAPIToken={fetchAPIToken}
                     />
                 </Panel>
             </div>
